(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{756:function(t,a,e){"use strict";e.r(a);var s=e(66),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"注解分类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注解分类"}},[t._v("#")]),t._v(" 注解分类")]),t._v(" "),e("p",[t._v("  Spring 除了提供对多种 Java 注解标准接口(JSR-250、JSR-330、JSR-305)的支持和实现之外，也定义了用于容器配置等功能的注解。")]),t._v(" "),e("h3",{attrs:{id:"组件注解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件注解"}},[t._v("#")]),t._v(" 组件注解")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("注解")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("归属")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("功能")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("@Named")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Java 标准")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("组件注册")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("@PostConstruct")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Java 标准")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("组件初始化方法回调")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("@PreDestory")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Java 标准")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("组件销毁方法回调")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("@Component")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Spring")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("组件注册(类)")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("@Bean")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Spring")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("组件注册(方法)")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("@Scope")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Spring")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("组件作用域")])])])]),t._v(" "),e("h3",{attrs:{id:"依赖注入注解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#依赖注入注解"}},[t._v("#")]),t._v(" 依赖注入注解")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("注解")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("归属")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("功能")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("@Resource")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Java 标准")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("依赖注入")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("@Inject")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Java 标准")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("依赖注入")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("@Nullable")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Java 标准或 Spring")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("非空检查")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("@Required")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Spring")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("依赖检查")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("@Autowired")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Spring")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("依赖主动装配")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("@Primary")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Spring")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("依赖注入 Bean 优先级，结合@Component 和@Bean 使用")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("@Qualifier")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Spring")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("依赖注入限定符，结合@Autowired 使用")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("@Order")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Spring")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("依赖注入顺序，结合@Component 和@Bean 使用")])])])]),t._v(" "),e("h3",{attrs:{id:"配置注解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置注解"}},[t._v("#")]),t._v(" 配置注解")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("注解")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("归属")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("功能")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("@Configuration")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Spring")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("配置类注解")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("@ComponentScan")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Spring")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("组件扫描注解")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("@Import")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Spring")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("导入其他配置类")])])])]),t._v(" "),e("h2",{attrs:{id:"spring-开启注解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-开启注解"}},[t._v("#")]),t._v(" Spring 开启注解")]),t._v(" "),e("p",[t._v("  默认情况 Spring 提供或实现的容器配置注解不会生效，需要手动配置实现。由 3 中开启类型注解的方式：")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("配置实现注解功能的 BeanPostProcessor 的 Bean")]),t._v(" "),e("p",[t._v("  对于使用容器扩展点的 BeanPostProcessor 实现的注解来说，注解的开启，只需要在配置文件中加上注解处理类的 Bean 配置。")])])]),t._v(" "),e("div",{staticClass:"language-xml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-xml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 公共注解的处理类的Bean的定义 --\x3e")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("org.springframework.beans.factory.annotation.CommonAnnotationBeanPostProcessor"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[t._v("  AutowiredAnnotationBeanPostProcessor、RequiredAnnotationBeanPostProcessor、PersistenceAnnotationBeanPostProcessor 配置方式相似。")]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("使用<context:annotation-config>标签")])]),t._v(" "),e("div",{staticClass:"language-xml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-xml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("context:")]),t._v("annotation-config")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 开启注解配置 --\x3e")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("  相当于一次性在容器注册 CommonAnnotationBeanPostProcessor、AutowiredAnnotationBeanPostProcessor、RequiredAnnotationBeanPostProcessor、PersistenceAnnotationBeanPostProcessor 4 种 PostProcessor 的 Bean。")]),t._v(" "),e("p",[t._v("  使用 context 标签，需要在 beans 元素中添加 context 的命名空间。")]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[e("p",[t._v("使用<context:component-scan>标签")]),t._v(" "),e("p",[t._v("  前面两种方式并不会开启@Component 等组件的注解功能。要开启此类型注解，需要进行路径扫描的配置：")])])]),t._v(" "),e("div",{staticClass:"language-xml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-xml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 包扫描配置 --\x3e")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("context:")]),t._v("component-scan")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("bask-package")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.staven.ssmi.anno"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[t._v("  base-package 属性用于设置扫描的路径，多个路径间使用逗号分隔。")]),t._v(" "),e("p",[t._v("  配置了 component-scan，也就开启了@Autowired、@Required 和@Resource 等注解功能，就不需要使用配置 annotation-config 了。")])])}),[],!1,null,null,null);a.default=n.exports}}]);